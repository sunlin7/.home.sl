#+TITLE: My emacs configuration
#+INCLUDE: ~/.emacs.save/org/common_header.org

This is my =.emacs= configuration for emacs31 on Ubuntu 22.04.
It depends on the [[https://github.com/syl20bnr/spacemacs/commits/develop][Spacemacs develop branch]].

** My configurations
The =sl-packages-list= records the package dependencies.
The =sl-savefile-dir= can change savefile folder out of .emacs.d directory.
#+BEGIN_SRC emacs-lisp :tangle dot-emacs.el
  (defvar sl-savefile-dir (expand-file-name ".emacs.save/" portable-home-dir))
#+END_SRC

If the =sl-modules= file exists, it will be loaded.

For more details, just refer to the [[./init.el]].

The [[./dot-emacs-template.el]] is a template for dot-emacs, refer to it for details.

*** Integrate with Spacemacs
 In the [[./dot-emacs-template.el]], it will advice the function ~dotspacemacs/layers~ to rewrite following key variables to the desired values for =Spacemacs=:
 #+BEGIN_SRC emacs-lisp :tangle no
   dotspacemacs-configuration-layers sl-configuration-layers
   dotspacemacs-additional-packages sl-packages-list
   dotspacemacs-excluded-packages sl-packages-excluded
   ;; ...
 #+end_src

*** An example for early-init.el
The =early-init.el= should do the very early initialization, as follows:
#+begin_src emacs-lisp :tangle ~/.emacs.d/early-init.el
  (setq gc-cons-threshold 402653184       ; copy from the init.el of Spacemacs
        gc-cons-percentage 0.6
        package-enable-at-startup nil
        native-comp-jit-compilation nil
        native-comp-enable-subr-trampolines nil
        comp-el-to-eln-strip-prefix '(".*\\.emacs\\.spacemacs/elpa/")
        warning-suppress-log-types '((use-package) (comp) (lsp-mode))
        org-modules nil                   ; speedup org-mode startup
        package-quickstart t              ; enable batch loading
        )
#+end_src

*** An example for .emacs
A =.emacs= can copy from the =dot-emacs-template.el=; or to load the =dot-emacs-template.el=, as follows:
#+begin_src emacs-lisp :tangle "dot-emacs.el"
  ;; -*- mode: emacs-lisp; lexical-binding: t -*-

  (when (eq system-type 'windows-nt)   ; more executables from cygwin, should before other path
    (nconc exec-path '("c:/temp/cygwin64/bin" "~/.local/bin"))
    (setenv "PATH" (concat (getenv "HOME") "\\.local\\bin;" (getenv "PATH") ";c:\\temp\\cygwin64\\bin"))
    (with-eval-after-load 'org ; org-mode on windows will try call associated Apps
      (add-to-list 'org-file-apps-windowsnt '("\\.txt\\'" . emacs))
      (add-to-list 'org-file-apps-windowsnt '("\\.log\\'" . emacs)))
    (add-to-list 'auto-mode-alist '("\\.mtl\\'" . xml-mode)))

  ;; copy from the template to initialize the portable-* values
  (defvar portable-root-dir (file-name-parent-directory invocation-directory))
  (defvar portable-home-dir
    (if (and (not (fboundp 'image-mask-p)) ; for noX build try .root[im]-*/.emacs
             (file-exists-p (expand-file-name ".emacs" portable-root-dir)))
        portable-root-dir
      (file-name-directory (or (buffer-file-name) load-file-name))))

  (unless early-init-file         ; load the early-init.el for essential variables
    (load (expand-file-name "early-init.el" user-emacs-directory) t t t))

  (setq package-quickstart-file (expand-file-name ".emacs.d/package-quickstart.el" portable-home-dir))
  (define-advice configuration-layer//load (:before (&rest _))
    (package-activate-all))

  ;; FIXME: `spacemacs-cache-directory' is required on initialize
  (dolist (x (flatten-list (mapcar 'getenv '("OHOME" "HOME"))))
    (let ((user-emacs-directory (expand-file-name ".emacs.d" x))
          (noninteractive nil)) ; `locate-user-emacs-file' short return for "-batch" mode
      (locate-user-emacs-file ".cache/")))

  ;; add snippets dir on initialize; when Spacemacs turn on yas-global-mode the snippets are reloaded
  (define-advice yasnippet-snippets-initialize (:around (&rest _))
    (add-to-list 'yas-snippet-dirs 'yasnippet-snippets-dir t))

  (autoload 'when-let* "subr-x")
  (when-let* ((init-template
               (expand-file-name ".home.sl/emacs.spacemacs/dot-emacs-template" portable-home-dir)))
    (load init-template))

  (custom-set-variables                   ; variables after loading Spacemacs
   '(window-system-default-frame-alist
     '((x . ((left . 0) (top . 72) (width . 190) (height . 50)))
       (w32 . ((left . (+ -16)) (top . (+ -3)) (width . 191) (height . 52)))))
   '(lsp-clients-clangd-args '("--header-insertion-decorators=0" "--clang-tidy" "--completion-style=detailed"))
   '(lsp-server-install-dir (expand-file-name ".emacs.d/.cache/lsp/" portable-home-dir))
   ;; '(dired-listing-switches "-alt") ; (setq dired-quick-sort-sort-by-last "time")
   '(dired-compress-directory-default-suffix ".tar.xz")
   '(dired-compress-file-default-suffix ".tar.xz")
   '(display-time-mode 1)
   '(display-time-24hr-format t)
   '(browse-url-browser-function 'eww)
   '(bookmark-default-file (expand-file-name "bookmarks" sl-savefile-dir))
   '(ietf-docs-rfc-url-directory "https://ietf.org/rfc/") ; FIXME: https://github.com/choppsv1/ietf-docs/pull/4
   '(ietf-docs-draft-url-directory "http://ietf.org/id/")
   '(google-translate-default-target-language "zh-CN")
   '(eww-search-prefix "https://www.google.com/search?q=")
   '(url-cookie-save-interval 60)
   '(rmail-file-name "~/.emacs.d/RMAIL"))

  (custom-set-faces
   '(irfc-reference-face ((t (:foreground "RoyalBlue4" :weight bold)))))

  (with-eval-after-load 'dired-quick-sort
    (setq dired-quick-sort-sort-by-last "time"))

  ;; the X11 window will shrink after apply the Spacemacs default font
  (spacemacs|do-after-display-system-init
   (modify-frame-parameters nil (alist-get (framep (selected-frame)) window-system-default-frame-alist)))

  (defun advice-unadvice (sym)
    "Remove all advices from symbol SYM."
    (interactive "aFunction symbol: ")
    (advice-mapc (lambda (advice _props) (advice-remove sym advice)) sym))

  (with-eval-after-load 'eww
    (defun eww-open-background ()
      "Fetch URL in a new EWW background buffer"
      (interactive)
      (save-window-excursion (funcall 'eww-open-in-new-buffer)))

    (define-key-after eww-mode-map
      [menu-bar eww follow-url-background]
      '(menu-item "Follow URL in background" #'eww-open-background)
      'Follow\ URL\ in\ new\ buffer)
    (define-key eww-mode-map [C-return] #'eww-open-background)
    (define-key eww-mode-map "Q" #'spacemacs/kill-this-buffer))
#+end_src
*** emacs with msys64
Starting emacs-x86_64-mingw64 directly may not have the PATH with mingw32/64; the following commands will help to get the correct PATH.
#+begin_src shell
  # starting emacs daemon
  c:\msys64\mingw64.exe bash -lc "runemacs --daemon"
  # starting emacs daemon and kill the frame
  c:\msys64\mingw64.exe bash -lc "emacsclientw --alternate-editor= -t --eval '(delete-frame nil 1)'"
  # for starting a client that daemon maybe not exist
  c:\msys64\mingw64.exe bash -lc "emacsclientw -nc --alternate-editor="
  # for just starting an emacsclient
  c:\msys64\mingw64\bin\emacsclient -c
#+end_src
** Additional Requirements
If you need support python =live-py-mode=, it requests the =tkinter= package, can install by
#+begin_src shell
apt-get install python36-tkinter
#+end_src

Spacemacs use some symbols fonts in ~spacemacs--diminished-minor-modes~, install ~ttf-ancient-fonts-symbola~ or ~adobe-source-han-sans-cn-fonts~ for them.
The fonts depend on ~all-the-icons~ can download with elisp ~all-the-icons-install-fonts~.
** Misc notes
*** Use the emacsclient as the default git difftool and mergetool
Edit ~/.gitconfig file, add the following sections to invoke the emacsclient.
#+begin_src conf
  [difftool]
    tool = ediff
    prompt = false
  [difftool "ediff"]
    cmd = emacsclient $([ -z "$INSIDE_EMACS" ]&&echo -t) --eval \"      \
    (let ((fn (lambda ()                                                \
              (add-hook (quote ediff-after-quit-hook-internal)          \
                        (backquote (lambda ()                           \
                           (dolist (buf (list ,ediff-buffer-A           \
                                              ,ediff-buffer-B           \
                                              ,ediff-buffer-C           \
                                              ,ediff-ancestor-buffer))  \
                             (when (bufferp buf) (kill-buffer buf)))    \
                           (delete-frame nil 1)))                       \
                        nil (quote local)))))                           \
    (ediff-files \\\"$LOCAL\\\" \\\"$REMOTE\\\" (list fn)))\"
  [mergetool]
    tool = ediff
    prompt = false
  [mergetool "ediff"]
    cmd = emacsclient $([ -z "$INSIDE_EMACS" ]&&echo -t) --eval \"      \
    (let ((fn (lambda ()                                                \
              (add-hook (quote ediff-after-quit-hook-internal)          \
                        (backquote (lambda ()                           \
                           (dolist (buf (list ,ediff-buffer-A           \
                                              ,ediff-buffer-B           \
                                              ,ediff-buffer-C           \
                                              ,ediff-ancestor-buffer))  \
                             (when (bufferp buf) (kill-buffer buf)))    \
                           (delete-frame nil 1)))                       \
                        nil (quote local)))))                           \
    (if (> (length \\\"$BASE\\\") 0)                                    \
          (ediff-merge-files \\\"$LOCAL\\\" \\\"$REMOTE\\\"             \
             (list fn) \\\"$MERGED\\\")                                 \
        (ediff-merge-files-with-ancestor                                \
            \\\"$LOCAL\\\" \\\"$REMOTE\\\" \\\"$BASE\\\"                \
            (list fn) \\\"$MERGED\\\")))\"
#+end_src
*** Ctrl+Alt_R+X not working for mintty (xterm)
   Reported to [[https://github.com/mintty/mintty/issues/1034][mintty#1034 CTRL + ALT_R + F combination does not work]], workaround is following
   [[https://github.com/mintty/mintty/issues/1034#issuecomment-693930315][mintty1034#issuecomment-693930315]] to map ALT_R to ALT_L.
#+begin_src text :tangle "map-alt_r-to-alt_l.reg"
  Windows Registry Editor Version 5.00

  [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layout]
  "Scancode Map"=hex:00,00,00,00,00,00,00,00,02,00,00,00,38,00,38,e0,00,00,00,00
#+end_src
*** Ctrl+Backspace and Ctrl+Shift+Backspace for mintty
According https://github.com/mintty/mintty/issues/1082, remap both =Ctrl+Back= and =Ctrl+Shift+Back= in =~/.minttyrc=,
and C+?(C+S+/) remap to "M+_" (use ~$ showkey -a~ to show key sequence).
#+begin_src conf
  KeyFunctions=C+Back:"[;5~"CS+Back:"[;6~"CS+/:"_"
#+end_src

Then add keymap in =~/.emacs=:
#+begin_src emacs-lisp
  (global-set-key "[;5~" [C-backspace])   ; mapped from C+Back in .minttyrc
  (global-set-key "[;6~" [C-S-backspace]) ; mapped from C+S+Back
#+end_src

** Shortcuts from Windows to Remote
   *shortcut for remote linux host:*
   \cygwin64\bin\cygstart.exe --hide /usr/bin/ssh.exe -XCnf dev "/bin/bash -lc '~/.root/bin/emacsclient\ -c\ -n\ --alternate-editor='"

   *shortcut for WSL:*
   wsl.exe -u sunlin7 -e /bin/bash -lc "~/.root/bin/emacsclient -c -n --alternate-editor="

   *shortcut for mingw64*
   \msys64\mingw64.exe bash -lc "runemacs --daemon"
   \msys64\mingw64\bin\emacsclientw.exe -c

   *shortcut for standalone*
   \emacs-master-x86_64-full\bin\runemacs.exe --daemon
   \emacs-master-x86_64-full\bin\emacsclientw.exe -c
