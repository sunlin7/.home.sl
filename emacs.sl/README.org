#+TITLE: My emacs configuration

This is my .emacs configure for emacs24 on Ubuntu 16.04.
It require yasnipets, auto-complite-el, cscope-el, gtags-el,
and reqiure wenquanyi, ubuntu-mono fonts.

** My configurations
Some times I want remove all the confgiure files but the saved files,
so set save-file directory out of .emacs.d directory.
#+BEGIN_SRC emacs-lisp
(defvar sl-savefile-dir "~/.emacs.save/")
#+END_SRC

Define the configuration directory, and load it.
#+BEGIN_SRC emacs-lisp
(defvar sl-init-file "~/.home.sl/emacs.sl/init.el")
(when (file-exists-p sl-init-file)
  (load-file sl-init-file))
#+END_SRC
After that, we can install the packages from elpa, just run follow function by press <kbd>Alt+x<kbd>
#+begin_src emacs-lisp :tangle yes
sl-package-install-all
#+end_src
*** emacs with msys64
 Follow elisp will make the emacs with msys64 work better.
 #+BEGIN_SRC elisp
   ;; set path before load libraries
   (autoload 'string-join "subr-x")
   (when (string= system-type "windows-nt")
     (let ((msys-path (cond ((string-match "x86_64" system-configuration) "D:/msys64/")
                            (t "D:/msys/"))))
       (when (file-exists-p msys-path)
         (dolist (item '("mingw64/bin" "mingw32/bin" "usr/bin"))
           (add-to-list 'exec-path (concat msys-path item)))
         (setenv "PATH" (replace-regexp-in-string "/" "\\\\" (string-join exec-path path-separator)))
         (setenv "PYTHONPATH" (concat msys-path "usr/lib/python2.7/site-packages/"))
         (let ((cygwin-mount-el "~/.emacs.save/cygwin-mount.el"))
           (load-file "~/.emacs.save/cygwin-mount.el")
           (cygwin-mount-activate)))))
 #+END_SRC

** Integrate with spacemacs
Try load the prelude when it availible.
#+BEGIN_SRC emacs-lisp
  (defvar my-prelude-init "~/.emacs.prelude/init.el")
  (when (file-exists-p my-prelude-init)
    ;; pre-config for prelude
    (setq-default prelude-savefile-dir sl-savefile-dir) ; set it to force redirect.
    (custom-set-variables
     '(prelude-flyspell nil)
     '(anaconda-mode-installation-directory "~/.emacs.prelude/anaconda-svr"))
    ;; load the prelude
    (load-file my-prelude-init)
    ;; post-config for prelude
    (disable-theme 'zenburn)
    (menu-bar-mode t)
    (dolist (mode-hook '(term-mode-hook eshell-mode-hook))
      (add-hook mode-hook
                (lambda () (setq-local global-hl-line-mode nil)))))
#+END_SRC

And the project settings:
#+begin_src emacs-lisp
  (defvar my-project-init (expand-file-name "projects.el" sl-savefile-dir))
  (when (file-exists-p my-project-init)
    (add-hook 'after-init-hook (lambda () (load-file my-project-init)))
    (defun sl-ede-project-reload ()
      (interactive)
      (setq ede-cpp-root-project-list nil)
      (load-file my-project-init)))
#+end_src

Some misc settings.
#+BEGIN_SRC emacs-lisp
  (autoload 'string-join "subr-x")
  (when (string= system-type "windows-nt")
    (let ((msys-path (cond ((string-match "x86_64" system-configuration) "D:/msys64/")
                           (t "D:/msys/"))))
      (when (file-exists-p msys-path)
        (dolist (item '("mingw64/bin" "mingw32/bin" "usr/bin"))
          (add-to-list 'exec-path (concat msys-path item)))
        (setenv "PATH" (replace-regexp-in-string "/" "\\\\" (string-join exec-path path-separator)))
        (setenv "PYTHONPATH" (concat msys-path "usr/lib/python2.7/site-packages/")))))

  (custom-set-variables
   '(ecb-fix-window-size t)
   '(max-lisp-eval-depth 100000)
   '(max-specpdl-size    100000)
   '(dired-listing-switches "-alt"))
  (put 'downcase-region 'disabled nil)

  (eval-after-load 'dired-x
    '(when (boundp 'dired-omit-extensions)
       (delete ".bin" dired-omit-extensions)))
  (add-to-list 'auto-coding-alist '("\\.log" . dos))
  (when (daemonp)
    (add-hook 'after-init-hook (lambda () (cd "~"))))

  (add-hook 'after-change-major-mode-hook
            '(lambda () (when (eq major-mode 'js-mode)
                          (setq-local whitespace-line-column 120))))

  (defvar org-babel-load-languages)
  (org-babel-do-load-languages 'org-babel-load-languages
                               (add-to-list 'org-babel-load-languages '(plantuml . t)))
  (setq-default org-plantuml-jar-path
                (expand-file-name "~/.root/share/plantuml.jar"))
#+END_SRC
